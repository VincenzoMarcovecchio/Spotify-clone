{"version":3,"sources":["spotify.js","Login.js","SidebarOption.js","DataLayer.js","SideBar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","serviceWorker.js","Reducer.js","index.js"],"names":["accessUrl","join","Login","className","src","alt","href","SidebarOption","option","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","SideBar","playlist","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","list","index","key","name","Header","user","placeholder","type","Avatar","images","url","display_name","songrow","track","playSong","onClick","id","album","artists","artist","Body","spotify","discover_weekly","dispatch","play","uris","then","res","getMyCurrentPlayingTrack","r","item","playing","description","context_uri","fontSize","tracks","Footer","token","useEffect","getMyCurrentPlaybackState","is_playing","handlePlayPause","pause","skipToPrevious","skipToNext","Grid","container","spacing","xs","Slider","aria-labbelledby","Player","SpotifyWebApi","App","React","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","console","log","setAccessToken","getMe","getUserPlaylists","playlists","getPlaylist","response","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.120b4209.chunk.js","sourcesContent":["export const authEndpoint = 'https://accounts.spotify.com/authorize';\r\nconst redirectUri = 'http://localhost:3000/';\r\nconst clientId = '7744b1ab982b467db556f388f0854120';\r\n\r\nconst scopes = [\r\n  'user-read-currently-playing',\r\n  'user-read-recently-played',\r\n  'user-read-playback-state',\r\n  'user-top-read',\r\n  'user-modify-playback-state',\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((initial, item) => {\r\n      var parts = item.split('=');\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  '%20'\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from 'react';\r\nimport './login.css';\r\nimport { accessUrl } from './spotify';\r\nexport default function Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"spotify\"\r\n      />\r\n      <a href={accessUrl}>LOGIN WITH SPOTIFY</a>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './sidebaroptions.css';\r\nexport default function SidebarOption({ option, Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{option}</h4> : <p>{option}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n","import React from 'react';\r\nimport './sidebar.css';\r\nimport SidebarOption from './SidebarOption';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { useDataLayerValue } from './DataLayer';\r\nexport default function SideBar() {\r\n  const [{ playlist }, dispatch] = useDataLayerValue();\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"spotify\"\r\n      />\r\n      <SidebarOption option=\"Home\" Icon={HomeIcon} />\r\n      <SidebarOption option=\"Search\" Icon={SearchIcon} />\r\n      <SidebarOption option=\"Your Library\" Icon={LibraryMusicIcon} />\r\n      <br />\r\n      <strong className=\"sidebar__title\">playlists</strong>\r\n      <hr />\r\n      {playlist?.items?.map((list, index) => (\r\n        <SidebarOption key={index} option={list.name} />\r\n      ))}\r\n      <SidebarOption option=\"Hip hop\" />\r\n      <SidebarOption option=\"Rock\" />\r\n      <SidebarOption option=\"RnB\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport './header.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nexport default function Header() {\r\n  const [{ user }, dispatch] = useDataLayerValue();\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input\r\n          placeholder=\"Search for Artists, Songs, or nothing at all\"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <Avatar src={user?.images[0]?.url} alt=\"artist playing\" />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './songrow.css';\r\n\r\nexport default function songrow({ track, playSong }) {\r\n  return (\r\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(', ')} -{' '}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './body.css';\r\nimport Header from './Header';\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport SongRow from './SongRow';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\r\n\r\n  const playPlaylist = (id) => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:37i9dQZF1DX6wfQutivYYr`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: 'SET_ITEM',\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: 'SET_PLAYING',\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: 'SET_ITEM',\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: 'SET_PLAYING',\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon\r\n            className=\"body__shuffle\"\r\n            onClick={playPlaylist}\r\n          />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map((item, index) => (\r\n          <SongRow key={index} playSong={playSong} track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport PlaylistIcon from '@material-ui/icons/PlaylistPlay';\r\nimport './footer.css';\r\nimport { Grid, Slider } from '@material-ui/core';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nexport default function Footer({ spotify }) {\r\n  const [{ token, item, playing }, dispatch] = useDataLayerValue();\r\n\r\n  useEffect(() => {\r\n    spotify.getMyCurrentPlaybackState().then((r) => {\r\n      dispatch({\r\n        type: 'SET_PLAYING',\r\n        playing: r.is_playing,\r\n      });\r\n      dispatch({\r\n        type: 'SET_ITEM',\r\n        item: r.item,\r\n      });\r\n    });\r\n  }, [spotify]);\r\n\r\n  const handlePlayPause = () => {\r\n    if (playing) {\r\n      spotify.pause();\r\n      dispatch({\r\n        type: 'SET_PLAYING',\r\n        playing: false,\r\n      });\r\n    } else {\r\n      spotify.play();\r\n      dispatch({\r\n        type: 'SET_PLAYING',\r\n        playing: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const skipNext = () => {\r\n    spotify.skipToNext();\r\n    spotify.getMyCurrentPlayingTrack.then((r) => {\r\n      dispatch({\r\n        type: 'SET_ITEM',\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: 'SET_PLAYING',\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n  const SkipPrevious = () => {\r\n    spotify.skipToPrevious();\r\n    spotify.getMyCurrentPlayingTrack().then((r) => {\r\n      dispatch({ type: 'SET_ITEM', item: r.item });\r\n      dispatch({ type: 'SETPLAYING', playing: true });\r\n    });\r\n  };\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        <img\r\n          className=\"footer__albumLogo\"\r\n          src={item?.album.images[0].url}\r\n          alt={item?.name}\r\n        />\r\n        {item ? (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>{item.name}</h4>\r\n            <p>{item.artists.map((artist) => artist.name).join(', ')}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>No song is playing</h4>\r\n            <p>...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon onClick={SkipPrevious} className=\"footer__icon\" />\r\n        {playing ? (\r\n          <PlayCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            className=\"footer__icon\"\r\n            fontSize=\"large\"\r\n          />\r\n        ) : (\r\n          <PauseCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        )}\r\n        <SkipNextIcon onClick={skipNext} className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labbelledby=\"continuos-slider\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport SideBar from './SideBar';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\nimport './player.css';\r\nexport default function Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <SideBar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n      <Footer spotify={spotify} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport Login from './Login';\nimport './App.css';\nimport { getTokenFromResponse } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  React.useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = '';\n    const _token = hash.access_token;\n    console.log(_token);\n    if (_token) {\n      spotify.setAccessToken(_token);\n\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token,\n      });\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: 'SET_USER',\n          user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: 'SET_USERPLAYLIST',\n          playlists,\n        });\n\n        spotify.getPlaylist('37i9dQZF1DX6wfQutivYYr').then((response) => {\n          dispatch({\n            type: 'SET_DISCOVER_WEEKLY',\n            discover_weekly: response,\n          });\n        });\n      });\n    }\n  }, []);\n\n  console.log(user);\n  console.log(token);\n  return (\n    <div className=\"App\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  user: null,\r\n  token: null,\r\n  playlist: [],\r\n  playing: false,\r\n  item: null,\r\n  discover_weekly: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case 'SET_TOKEN':\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case 'SET_USERPLAYLIST':\r\n      return {\r\n        ...state,\r\n        playlist: action.playlists,\r\n      };\r\n    case 'SET_DISCOVER_WEEKLY':\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n\r\n    case 'SET_PLAYING':\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n\r\n    case 'SET_ITEM':\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { DataLayer } from './DataLayer';\nimport reducer, { initialState } from './Reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}